/*
 Mutaz Helal
 November 15
 Program Name: MemoryGame
 Program Description: This program uses arrays to simulate a matching game.
 * A grid of cards will be displayed and the user is to select 2 cards at a time
 * looking for matching cards. The goal of this game is for the user to find
 * the matches.
 */

package memorygame;

import java.util.ArrayList;
import javax.swing.ImageIcon;
import java.util.Timer;
import java.util.TimerTask;

public class MemoryUI extends javax.swing.JFrame {

    //initialize array lists
    ArrayList<String> cards = new ArrayList();
    ArrayList<String> set = new ArrayList();

    //initialize ImageIcons
    ImageIcon a = new ImageIcon("aceclubs.jpg");
    ImageIcon b = new ImageIcon("acediamond.jpg");
    ImageIcon c = new ImageIcon("aceheart.jpg");
    ImageIcon d = new ImageIcon("acespade.jpg");
    ImageIcon e = new ImageIcon("kingclubs.jpg");
    ImageIcon f = new ImageIcon("kingdiamond.jpg");
    ImageIcon g = new ImageIcon("kingheart.jpg");
    ImageIcon h = new ImageIcon("kingspade.jpg");
    ImageIcon back = new ImageIcon("cardback.jpg");
    ImageIcon done = new ImageIcon("done.jpg");

    //initialize and set values to variables
    int count, c1, c2, card1, card2, card3, card4, card5, card6, card7, card8,
            card9, card10, card11, card12, card13, card14, card15, card16;
    int cardsLeft = 16;
    int[] change = new int[16];
    boolean flag = false;
    

    //initialize Timer
    Timer timer = new Timer();

    /**
     * Creates new form MemoryUI
     */
    public MemoryUI() {
        //hide exit button
        initComponents();
        exitButton.setVisible(false);
        
        //set up the change array
        for (int z = 0; z <= 15; z++) {
            change[z] = 1;
        }

        //initialize and add cards 1 to 8 to set
        String temp;
        for (int x = 0; x <= 7; x++) {
            for (int y = 1; y <= 2; y++) {
                temp = Integer.toString(x);
                set.add(temp);
            }
        }

        // generate random numbers till set is empty and cards is full
        for (int x = 0; x <= 15; x++) {
            double index = Math.floor(Math.random() * (16 - x));
            int index1 = (int) index;
            cards.add(set.get(index1));
            set.remove(set.get(index1));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        outputLabel = new javax.swing.JLabel();
        congratsLabel = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        card1Button = new javax.swing.JButton();
        card2Button = new javax.swing.JButton();
        card3Button = new javax.swing.JButton();
        card4Button = new javax.swing.JButton();
        card5Button = new javax.swing.JButton();
        card6Button = new javax.swing.JButton();
        card7Button = new javax.swing.JButton();
        card8Button = new javax.swing.JButton();
        card9Button = new javax.swing.JButton();
        card10Button = new javax.swing.JButton();
        card11Button = new javax.swing.JButton();
        card12Button = new javax.swing.JButton();
        card13Button = new javax.swing.JButton();
        card14Button = new javax.swing.JButton();
        card15Button = new javax.swing.JButton();
        card16Button = new javax.swing.JButton();
        cardMatchGFX = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        outputLabel.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        outputLabel.setForeground(new java.awt.Color(255, 255, 255));
        outputLabel.setText("Click the cards to match them.");
        getContentPane().add(outputLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, -1, 30));

        congratsLabel.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        congratsLabel.setForeground(new java.awt.Color(41, 238, 27));
        getContentPane().add(congratsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 210, 30));

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, -1, -1));

        card1Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card1Button.setPreferredSize(new java.awt.Dimension(90, 125));
        card1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card1ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card1Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 108, 150));

        card2Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card2ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card2Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 108, 150));

        card3Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card3ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card3Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 90, 108, 150));

        card4Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card4Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card4ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card4Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, 108, 150));

        card5Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card5Button.setPreferredSize(new java.awt.Dimension(108, 150));
        card5Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card5ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card5Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, -1));

        card6Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card6Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card6ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card6Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 108, 150));

        card7Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card7Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card7ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card7Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 240, 108, 150));

        card8Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card8Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card8ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card8Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 240, 108, 150));

        card9Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card9Button.setPreferredSize(new java.awt.Dimension(108, 150));
        card9Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card9ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card9Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, -1, -1));

        card10Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card10Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card10ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card10Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 390, 108, 150));

        card11Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card11Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card11ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card11Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 390, 108, 150));

        card12Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card12Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card12ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card12Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 390, 108, 150));

        card13Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card13Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card13ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card13Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 540, 108, 150));

        card14Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card14Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card14ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card14Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 540, 108, 150));

        card15Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card15Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card15ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card15Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 540, 108, 150));

        card16Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardback.jpg"))); // NOI18N
        card16Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                card16ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(card16Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 540, 108, 150));

        cardMatchGFX.setForeground(new java.awt.Color(255, 255, 255));
        cardMatchGFX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/memorygame/cardMatch.jpg"))); // NOI18N
        getContentPane().add(cardMatchGFX, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void card1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card1ButtonActionPerformed
        //check if card is done or not
        if (card1Button.getIcon() == back) {
            card1 = 0;
        }

        if (card1Button.getIcon() == done) {
            //do nothing

            //set other card counters back to 0
        } else {
            card1++;
            card2 = 0;
            card3 = 0;
            card4 = 0;
            card5 = 0;
            card6 = 0;
            card7 = 0;
            card8 = 0;
            card9 = 0;
            card10 = 0;
            card11 = 0;
            card12 = 0;
            card13 = 0;
            card14 = 0;
            card15 = 0;
            card16 = 0;

            //stop the user from matching a card to itself
            if (card1 == 2) {
                card1 = 1;

            } else {

                //flip the card to the generated icon
                if (flag && count < 3) {
                    return;
                }
                String temp = cards.get(0);

                switch (temp) {
                    case "0":
                        card1Button.setIcon(a);
                        break;
                    case "1":
                        card1Button.setIcon(b);
                        break;
                    case "2":
                        card1Button.setIcon(c);
                        break;
                    case "3":
                        card1Button.setIcon(d);
                        break;
                    case "4":
                        card1Button.setIcon(e);
                        break;
                    case "5":
                        card1Button.setIcon(f);
                        break;
                    case "6":
                        card1Button.setIcon(g);
                        break;
                    case "7":
                        card1Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(0, temp);
            }
        }
    }//GEN-LAST:event_card1ButtonActionPerformed

    private void card2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card2ButtonActionPerformed
        //check if card is done or not
        if (card2Button.getIcon() == back) {
            card2 = 0;
        }

        if (card2Button.getIcon() == done) {
            //do nothing

            //set other card counters back to 0
        } else {
            card1 = 0;
            card2++;
            card3 = 0;
            card4 = 0;
            card5 = 0;
            card6 = 0;
            card7 = 0;
            card8 = 0;
            card9 = 0;
            card10 = 0;
            card11 = 0;
            card12 = 0;
            card13 = 0;
            card14 = 0;
            card15 = 0;
            card16 = 0;

            //stop the user from matching a card to itself
            if (card2 == 2) {
                card2 = 1;

            } else {

                //flip the card to the generated icon
                if (flag && count < 3) {
                    return;
                }
                String temp = cards.get(1);

                switch (temp) {
                    case "0":
                        card2Button.setIcon(a);
                        break;
                    case "1":
                        card2Button.setIcon(b);
                        break;
                    case "2":
                        card2Button.setIcon(c);
                        break;
                    case "3":
                        card2Button.setIcon(d);
                        break;
                    case "4":
                        card2Button.setIcon(e);
                        break;
                    case "5":
                        card2Button.setIcon(f);
                        break;
                    case "6":
                        card2Button.setIcon(g);
                        break;
                    case "7":
                        card2Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(1, temp);
            }
        }
    }//GEN-LAST:event_card2ButtonActionPerformed

    private void card3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card3ButtonActionPerformed
        if (card3Button.getIcon() == back) {
            card3 = 0;
        }
        if (card3Button.getIcon() == done) {
            //do nothing

        } else {
            card1 = 0;
            card2 = 0;
            card3++;
            card4 = 0;
            card5 = 0;
            card6 = 0;
            card7 = 0;
            card8 = 0;
            card9 = 0;
            card10 = 0;
            card11 = 0;
            card12 = 0;
            card13 = 0;
            card14 = 0;
            card15 = 0;
            card16 = 0;

            if (card3 == 2) {
                card3 = 1;

            } else {

                if (flag && count < 3) {
                    return;
                }

                String temp = cards.get(2);

                switch (temp) {
                    case "0":
                        card3Button.setIcon(a);
                        break;
                    case "1":
                        card3Button.setIcon(b);
                        break;
                    case "2":
                        card3Button.setIcon(c);
                        break;
                    case "3":
                        card3Button.setIcon(d);
                        break;
                    case "4":
                        card3Button.setIcon(e);
                        break;
                    case "5":
                        card3Button.setIcon(f);
                        break;
                    case "6":
                        card3Button.setIcon(g);
                        break;
                    case "7":
                        card3Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(2, temp);
            }
        }
    }//GEN-LAST:event_card3ButtonActionPerformed

    private void card4ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card4ButtonActionPerformed
        if (card4Button.getIcon() == back) {
            card4 = 0;
        }

        if (card4Button.getIcon() == done) {
            //do nothing

        } else {
            card1 = 0;
            card2 = 0;
            card3 = 0;
            card4++;
            card5 = 0;
            card6 = 0;
            card7 = 0;
            card8 = 0;
            card9 = 0;
            card10 = 0;
            card11 = 0;
            card12 = 0;
            card13 = 0;
            card14 = 0;
            card15 = 0;
            card16 = 0;

            if (card4 == 2) {
                card4 = 1;

            } else {

                if (flag && count < 3) {
                    return;
                }

                String temp = cards.get(3);

                switch (temp) {
                    case "0":
                        card4Button.setIcon(a);
                        break;
                    case "1":
                        card4Button.setIcon(b);
                        break;
                    case "2":
                        card4Button.setIcon(c);
                        break;
                    case "3":
                        card4Button.setIcon(d);
                        break;
                    case "4":
                        card4Button.setIcon(e);
                        break;
                    case "5":
                        card4Button.setIcon(f);
                        break;
                    case "6":
                        card4Button.setIcon(g);
                        break;
                    case "7":
                        card4Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(3, temp);
            }
        }
    }//GEN-LAST:event_card4ButtonActionPerformed

    private void card5ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card5ButtonActionPerformed
        if (card5Button.getIcon() == back) {
            card5 = 0;
        }

        if (card5Button.getIcon() == done) {
            //do nothing

        } else {
            card1 = 0;
            card2 = 0;
            card3 = 0;
            card4 = 0;
            card5++;
            card6 = 0;
            card7 = 0;
            card8 = 0;
            card9 = 0;
            card10 = 0;
            card11 = 0;
            card12 = 0;
            card13 = 0;
            card14 = 0;
            card15 = 0;
            card16 = 0;

            if (card5 == 2) {
                card5 = 1;

            } else {

                if (flag && count < 3) {
                    return;
                }

                String temp = cards.get(4);

                switch (temp) {
                    case "0":
                        card5Button.setIcon(a);
                        break;
                    case "1":
                        card5Button.setIcon(b);
                        break;
                    case "2":
                        card5Button.setIcon(c);
                        break;
                    case "3":
                        card5Button.setIcon(d);
                        break;
                    case "4":
                        card5Button.setIcon(e);
                        break;
                    case "5":
                        card5Button.setIcon(f);
                        break;
                    case "6":
                        card5Button.setIcon(g);
                        break;
                    case "7":
                        card5Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(4, temp);
            }
        }
    }//GEN-LAST:event_card5ButtonActionPerformed

    private void card6ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card6ButtonActionPerformed
        if (card6Button.getIcon() == back) {
            card6 = 0;
        }

        if (card6Button.getIcon() == done) {
            //do nothing

        } else {
            card1 = 0;
            card2 = 0;
            card3 = 0;
            card4 = 0;
            card5 = 0;
            card6++;
            card7 = 0;
            card8 = 0;
            card9 = 0;
            card10 = 0;
            card11 = 0;
            card12 = 0;
            card13 = 0;
            card14 = 0;
            card15 = 0;
            card16 = 0;

            if (card6 == 2) {
                card6 = 1;

            } else {

                if (flag && count < 3) {
                    return;
                }

                String temp = cards.get(5);

                switch (temp) {
                    case "0":
                        card6Button.setIcon(a);
                        break;
                    case "1":
                        card6Button.setIcon(b);
                        break;
                    case "2":
                        card6Button.setIcon(c);
                        break;
                    case "3":
                        card6Button.setIcon(d);
                        break;
                    case "4":
                        card6Button.setIcon(e);
                        break;
                    case "5":
                        card6Button.setIcon(f);
                        break;
                    case "6":
                        card6Button.setIcon(g);
                        break;
                    case "7":
                        card6Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(5, temp);
            }
        }
    }//GEN-LAST:event_card6ButtonActionPerformed

    private void card7ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card7ButtonActionPerformed
        if (card7Button.getIcon() == back) {
            card7 = 0;
        }

        if (card7Button.getIcon() == done) {
            //do nothing

        } else {
            card1 = 0;
            card2 = 0;
            card3 = 0;
            card4 = 0;
            card5 = 0;
            card6 = 0;
            card7++;
            card8 = 0;
            card9 = 0;
            card10 = 0;
            card11 = 0;
            card12 = 0;
            card13 = 0;
            card14 = 0;
            card15 = 0;
            card16 = 0;

            if (card7 == 2) {
                card7 = 1;

            } else {

                if (flag && count < 3) {
                    return;
                }

                String temp = cards.get(6);

                switch (temp) {
                    case "0":
                        card7Button.setIcon(a);
                        break;
                    case "1":
                        card7Button.setIcon(b);
                        break;
                    case "2":
                        card7Button.setIcon(c);
                        break;
                    case "3":
                        card7Button.setIcon(d);
                        break;
                    case "4":
                        card7Button.setIcon(e);
                        break;
                    case "5":
                        card7Button.setIcon(f);
                        break;
                    case "6":
                        card7Button.setIcon(g);
                        break;
                    case "7":
                        card7Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(6, temp);
            }
        }
    }//GEN-LAST:event_card7ButtonActionPerformed

    private void card8ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card8ButtonActionPerformed
        if (card8Button.getIcon() == back) {
            card8 = 0;
        }

        if (card8Button.getIcon() == done) {
            //do nothing

        } else {
            card1 = 0;
            card2 = 0;
            card3 = 0;
            card4 = 0;
            card5 = 0;
            card6 = 0;
            card7 = 0;
            card8++;
            card9 = 0;
            card10 = 0;
            card11 = 0;
            card12 = 0;
            card13 = 0;
            card14 = 0;
            card15 = 0;
            card16 = 0;

            if (card8 == 2) {
                card8 = 1;

            } else {

                if (flag && count < 3) {
                    return;
                }

                String temp = cards.get(7);

                switch (temp) {
                    case "0":
                        card8Button.setIcon(a);
                        break;
                    case "1":
                        card8Button.setIcon(b);
                        break;
                    case "2":
                        card8Button.setIcon(c);
                        break;
                    case "3":
                        card8Button.setIcon(d);
                        break;
                    case "4":
                        card8Button.setIcon(e);
                        break;
                    case "5":
                        card8Button.setIcon(f);
                        break;
                    case "6":
                        card8Button.setIcon(g);
                        break;
                    case "7":
                        card8Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(7, temp);
            }
        }
    }//GEN-LAST:event_card8ButtonActionPerformed

    private void card9ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card9ButtonActionPerformed
        if (card9Button.getIcon() == back) {
            card9 = 0;
        }

        if (card9Button.getIcon() == done) {
            //do nothing

        } else {
            card1 = 0;
            card2 = 0;
            card3 = 0;
            card4 = 0;
            card5 = 0;
            card6 = 0;
            card7 = 0;
            card8 = 0;
            card9++;
            card10 = 0;
            card11 = 0;
            card12 = 0;
            card13 = 0;
            card14 = 0;
            card15 = 0;
            card16 = 0;

            if (card9 == 2) {
                card9 = 1;

            } else {

                if (flag && count < 3) {
                    return;
                }

                String temp = cards.get(8);

                switch (temp) {
                    case "0":
                        card9Button.setIcon(a);
                        break;
                    case "1":
                        card9Button.setIcon(b);
                        break;
                    case "2":
                        card9Button.setIcon(c);
                        break;
                    case "3":
                        card9Button.setIcon(d);
                        break;
                    case "4":
                        card9Button.setIcon(e);
                        break;
                    case "5":
                        card9Button.setIcon(f);
                        break;
                    case "6":
                        card9Button.setIcon(g);
                        break;
                    case "7":
                        card9Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(8, temp);
            }
        }
    }//GEN-LAST:event_card9ButtonActionPerformed

    private void card10ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card10ButtonActionPerformed
        if (card10Button.getIcon() == back) {
            card10 = 0;
        }

        if (card10Button.getIcon() == done) {
            //do nothing

        } else {
            card1 = 0;
            card2 = 0;
            card3 = 0;
            card4 = 0;
            card5 = 0;
            card6 = 0;
            card7 = 0;
            card8 = 0;
            card9 = 0;
            card10++;
            card11 = 0;
            card12 = 0;
            card13 = 0;
            card14 = 0;
            card15 = 0;
            card16 = 0;

            if (card10 == 2) {
                card10 = 1;

            } else {

                if (flag && count < 3) {
                    return;
                }

                String temp = cards.get(9);

                switch (temp) {
                    case "0":
                        card10Button.setIcon(a);
                        break;
                    case "1":
                        card10Button.setIcon(b);
                        break;
                    case "2":
                        card10Button.setIcon(c);
                        break;
                    case "3":
                        card10Button.setIcon(d);
                        break;
                    case "4":
                        card10Button.setIcon(e);
                        break;
                    case "5":
                        card10Button.setIcon(f);
                        break;
                    case "6":
                        card10Button.setIcon(g);
                        break;
                    case "7":
                        card10Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(9, temp);
            }
        }
    }//GEN-LAST:event_card10ButtonActionPerformed

    private void card11ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card11ButtonActionPerformed
        if (card11Button.getIcon() == back) {
            card11 = 0;
        }

        if (card11Button.getIcon() == done) {
            //do nothing

        } else {
            card1 = 0;
            card2 = 0;
            card3 = 0;
            card4 = 0;
            card5 = 0;
            card6 = 0;
            card7 = 0;
            card8 = 0;
            card9 = 0;
            card10 = 0;
            card11++;
            card12 = 0;
            card13 = 0;
            card14 = 0;
            card15 = 0;
            card16 = 0;

            if (card11 == 2) {
                card11 = 1;

            } else {

                if (flag && count < 3) {
                    return;
                }

                String temp = cards.get(10);

                switch (temp) {
                    case "0":
                        card11Button.setIcon(a);
                        break;
                    case "1":
                        card11Button.setIcon(b);
                        break;
                    case "2":
                        card11Button.setIcon(c);
                        break;
                    case "3":
                        card11Button.setIcon(d);
                        break;
                    case "4":
                        card11Button.setIcon(e);
                        break;
                    case "5":
                        card11Button.setIcon(f);
                        break;
                    case "6":
                        card11Button.setIcon(g);
                        break;
                    case "7":
                        card11Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(10, temp);
            }
        }
    }//GEN-LAST:event_card11ButtonActionPerformed

    private void card12ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card12ButtonActionPerformed
        if (card12Button.getIcon() == back) {
            card12 = 0;
        }

        if (card12Button.getIcon() == done) {
            //do nothing

        } else {
            card1 = 0;
            card2 = 0;
            card3 = 0;
            card4 = 0;
            card5 = 0;
            card6 = 0;
            card7 = 0;
            card8 = 0;
            card9 = 0;
            card10 = 0;
            card11 = 0;
            card12++;
            card13 = 0;
            card14 = 0;
            card15 = 0;
            card16 = 0;

            if (card12 == 2) {
                card12 = 1;

            } else {

                if (flag && count < 3) {
                    return;
                }

                String temp = cards.get(11);

                switch (temp) {
                    case "0":
                        card12Button.setIcon(a);
                        break;
                    case "1":
                        card12Button.setIcon(b);
                        break;
                    case "2":
                        card12Button.setIcon(c);
                        break;
                    case "3":
                        card12Button.setIcon(d);
                        break;
                    case "4":
                        card12Button.setIcon(e);
                        break;
                    case "5":
                        card12Button.setIcon(f);
                        break;
                    case "6":
                        card12Button.setIcon(g);
                        break;
                    case "7":
                        card12Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(11, temp);
            }
        }
    }//GEN-LAST:event_card12ButtonActionPerformed

    private void card13ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card13ButtonActionPerformed
        if (card13Button.getIcon() == back) {
            card13 = 0;
        }

        if (card13Button.getIcon() == done) {
            //do nothing

        } else {
            card1 = 0;
            card2 = 0;
            card3 = 0;
            card4 = 0;
            card5 = 0;
            card6 = 0;
            card7 = 0;
            card8 = 0;
            card9 = 0;
            card10 = 0;
            card11 = 0;
            card12 = 0;
            card13++;
            card14 = 0;
            card15 = 0;
            card16 = 0;

            if (card13 == 2) {
                card13 = 1;

            } else {

                if (flag && count < 3) {
                    return;
                }

                String temp = cards.get(12);

                switch (temp) {
                    case "0":
                        card13Button.setIcon(a);
                        break;
                    case "1":
                        card13Button.setIcon(b);
                        break;
                    case "2":
                        card13Button.setIcon(c);
                        break;
                    case "3":
                        card13Button.setIcon(d);
                        break;
                    case "4":
                        card13Button.setIcon(e);
                        break;
                    case "5":
                        card13Button.setIcon(f);
                        break;
                    case "6":
                        card13Button.setIcon(g);
                        break;
                    case "7":
                        card13Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(12, temp);
            }
        }
    }//GEN-LAST:event_card13ButtonActionPerformed

    private void card14ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card14ButtonActionPerformed
        if (card14Button.getIcon() == back) {
            card14 = 0;
        }

        if (card14Button.getIcon() == done) {
            //do nothing

        } else {
            card1 = 0;
            card2 = 0;
            card3 = 0;
            card4 = 0;
            card5 = 0;
            card6 = 0;
            card7 = 0;
            card8 = 0;
            card9 = 0;
            card10 = 0;
            card11 = 0;
            card12 = 0;
            card13 = 0;
            card14++;
            card15 = 0;
            card16 = 0;

            if (card14 == 2) {
                card14 = 1;

            } else {

                if (flag && count < 3) {
                    return;
                }

                String temp = cards.get(13);

                switch (temp) {
                    case "0":
                        card14Button.setIcon(a);
                        break;
                    case "1":
                        card14Button.setIcon(b);
                        break;
                    case "2":
                        card14Button.setIcon(c);
                        break;
                    case "3":
                        card14Button.setIcon(d);
                        break;
                    case "4":
                        card14Button.setIcon(e);
                        break;
                    case "5":
                        card14Button.setIcon(f);
                        break;
                    case "6":
                        card14Button.setIcon(g);
                        break;
                    case "7":
                        card14Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(13, temp);
            }
        }
     }//GEN-LAST:event_card14ButtonActionPerformed

    private void card15ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card15ButtonActionPerformed
        if (card15Button.getIcon() == back) {
            card15 = 0;
        }

        if (card15Button.getIcon() == done) {
            //do nothing

        } else {
            card1 = 0;
            card2 = 0;
            card3 = 0;
            card4 = 0;
            card5 = 0;
            card6 = 0;
            card7 = 0;
            card8 = 0;
            card9 = 0;
            card10 = 0;
            card11 = 0;
            card12 = 0;
            card13 = 0;
            card14 = 0;
            card15++;
            card16 = 0;

            if (card15 == 2) {
                card15 = 1;

            } else {

                if (flag && count < 3) {
                    return;
                }

                String temp = cards.get(14);

                switch (temp) {
                    case "0":
                        card15Button.setIcon(a);
                        break;
                    case "1":
                        card15Button.setIcon(b);
                        break;
                    case "2":
                        card15Button.setIcon(c);
                        break;
                    case "3":
                        card15Button.setIcon(d);
                        break;
                    case "4":
                        card15Button.setIcon(e);
                        break;
                    case "5":
                        card15Button.setIcon(f);
                        break;
                    case "6":
                        card15Button.setIcon(g);
                        break;
                    case "7":
                        card15Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(14, temp);
            }
        }
    }//GEN-LAST:event_card15ButtonActionPerformed

    private void card16ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_card16ButtonActionPerformed
        if (card16Button.getIcon() == back) {
            card16 = 0;
        }

        if (card16Button.getIcon() == done) {
            //do nothing

        } else {
            card1 = 0;
            card2 = 0;
            card3 = 0;
            card4 = 0;
            card5 = 0;
            card6 = 0;
            card7 = 0;
            card8 = 0;
            card9 = 0;
            card10 = 0;
            card11 = 0;
            card12 = 0;
            card13 = 0;
            card14 = 0;
            card15 = 0;
            card16++;

            if (card16 == 2) {
                card16 = 1;

            } else {

                if (flag && count < 3) {
                    return;
                }

                String temp = cards.get(15);

                switch (temp) {
                    case "0":
                        card16Button.setIcon(a);
                        break;
                    case "1":
                        card16Button.setIcon(b);
                        break;
                    case "2":
                        card16Button.setIcon(c);
                        break;
                    case "3":
                        card16Button.setIcon(d);
                        break;
                    case "4":
                        card16Button.setIcon(e);
                        break;
                    case "5":
                        card16Button.setIcon(f);
                        break;
                    case "6":
                        card16Button.setIcon(g);
                        break;
                    case "7":
                        card16Button.setIcon(h);
                        break;
                    default:
                        break;
                }

                preGuess(15, temp);
            }
        }
     }//GEN-LAST:event_card16ButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        //exit the program
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void preGuess(int index, String temp) {

        count++;

        //set c1 and c2
        if (count == 1) {
            c1 = Integer.parseInt(temp);
        } else {
            c2 = Integer.parseInt(temp);
        }

        change[index] = 0;

        // change flag to stop any other cards from being clicked
        if (count == 2) {
            flag = true;

            // call guess after 500ms to allow user to see the second card
            timer.schedule(new TimerTask() {
                @Override

                public void run() {
                    guess();
                    flag = false;
                }
            }, 500);
        }
    }

    private void guess() {
        count = 0;

        //check if the cards match
        if (c1 == c2) {
            cardsLeft = cardsLeft - 2;
            for (int y = 1; y <= 2; y++) {
                flag = false;

                //set the matched cards to "done"
                if (change[0] == 0) {
                    card1Button.setIcon(done);
                    change[0] = 2;
                } else if (change[1] == 0) {
                    card2Button.setIcon(done);
                    change[1] = 2;
                } else if (change[2] == 0) {
                    card3Button.setIcon(done);
                    change[2] = 2;
                } else if (change[3] == 0) {
                    card4Button.setIcon(done);
                    change[3] = 2;
                } else if (change[4] == 0) {
                    card5Button.setIcon(done);
                    change[4] = 2;
                } else if (change[5] == 0) {
                    card6Button.setIcon(done);
                    change[5] = 2;
                } else if (change[6] == 0) {
                    card7Button.setIcon(done);
                    change[6] = 2;
                } else if (change[7] == 0) {
                    card8Button.setIcon(done);
                    change[7] = 2;
                } else if (change[8] == 0) {
                    card9Button.setIcon(done);
                    change[8] = 2;
                } else if (change[9] == 0) {
                    card10Button.setIcon(done);
                    change[9] = 2;
                } else if (change[10] == 0) {
                    card11Button.setIcon(done);
                    change[10] = 2;
                } else if (change[11] == 0) {
                    card12Button.setIcon(done);
                    change[11] = 2;
                } else if (change[12] == 0) {
                    card13Button.setIcon(done);
                    change[12] = 2;
                } else if (change[13] == 0) {
                    card14Button.setIcon(done);
                    change[13] = 2;
                } else if (change[14] == 0) {
                    card15Button.setIcon(done);
                    change[14] = 2;
                } else if (change[15] == 0) {
                    card16Button.setIcon(done);
                    change[15] = 2;
                }
            }

            //set the unmatched cards to "back"
        } else {
            for (int y = 1; y <= 2; y++) {
                if (change[0] == 0) {
                    card1Button.setIcon(back);
                    change[0] = 1;
                } else if (change[1] == 0) {
                    card2Button.setIcon(back);
                    change[1] = 1;
                } else if (change[2] == 0) {
                    card3Button.setIcon(back);
                    change[2] = 1;
                } else if (change[3] == 0) {
                    card4Button.setIcon(back);
                    change[3] = 1;
                } else if (change[4] == 0) {
                    card5Button.setIcon(back);
                    change[4] = 1;
                } else if (change[5] == 0) {
                    card6Button.setIcon(back);
                    change[5] = 1;
                } else if (change[6] == 0) {
                    card7Button.setIcon(back);
                    change[6] = 1;
                } else if (change[7] == 0) {
                    card8Button.setIcon(back);
                    change[7] = 1;
                } else if (change[8] == 0) {
                    card9Button.setIcon(back);
                    change[8] = 1;
                } else if (change[9] == 0) {
                    card10Button.setIcon(back);
                    change[9] = 1;
                } else if (change[10] == 0) {
                    card11Button.setIcon(back);
                    change[10] = 1;
                } else if (change[11] == 0) {
                    card12Button.setIcon(back);
                    change[11] = 1;
                } else if (change[12] == 0) {
                    card13Button.setIcon(back);
                    change[12] = 1;
                } else if (change[13] == 0) {
                    card14Button.setIcon(back);
                    change[13] = 1;
                } else if (change[14] == 0) {
                    card15Button.setIcon(back);
                    change[14] = 1;
                } else if (change[15] == 0) {
                    card16Button.setIcon(back);
                    change[15] = 1;
                }
            }
        }

        //tell the user that they won
        if (cardsLeft == 0) {
            outputLabel.setText("");
            congratsLabel.setText("Congratulations, you win!");
            exitButton.setVisible(true);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemoryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemoryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemoryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemoryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MemoryUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton card10Button;
    private javax.swing.JButton card11Button;
    private javax.swing.JButton card12Button;
    private javax.swing.JButton card13Button;
    private javax.swing.JButton card14Button;
    private javax.swing.JButton card15Button;
    private javax.swing.JButton card16Button;
    private javax.swing.JButton card1Button;
    private javax.swing.JButton card2Button;
    private javax.swing.JButton card3Button;
    private javax.swing.JButton card4Button;
    private javax.swing.JButton card5Button;
    private javax.swing.JButton card6Button;
    private javax.swing.JButton card7Button;
    private javax.swing.JButton card8Button;
    private javax.swing.JButton card9Button;
    private javax.swing.JLabel cardMatchGFX;
    private javax.swing.JLabel congratsLabel;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel outputLabel;
    // End of variables declaration//GEN-END:variables
}
