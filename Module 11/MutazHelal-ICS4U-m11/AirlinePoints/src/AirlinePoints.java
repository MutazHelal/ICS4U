/*
 * Mutaz Helal
 * Febuary 1
 * AirlinePoints
 * This application records airline points data for passengers,
 * and determines if a passenger qualifies for a bonus.
 */

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class AirlinePoints extends javax.swing.JFrame {

    ArrayList<airlineData> airlineList = new ArrayList<>();
    static int count = 0;

    /**
     * Creates new form AirlinePoints
     */
    public AirlinePoints() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        firstNameIn = new javax.swing.JTextField();
        lastNameIn = new javax.swing.JTextField();
        weekIn1 = new javax.swing.JTextField();
        weekIn2 = new javax.swing.JTextField();
        weekIn3 = new javax.swing.JTextField();
        weekIn4 = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        list = new javax.swing.JButton();
        total = new javax.swing.JButton();
        successLabel = new javax.swing.JLabel();
        errorLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        totalTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        airlineGFX = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        firstNameIn.setBackground(new java.awt.Color(24, 39, 34));
        firstNameIn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        firstNameIn.setForeground(new java.awt.Color(255, 255, 255));
        firstNameIn.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        firstNameIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                firstNameInKeyPressed(evt);
            }
        });
        getContentPane().add(firstNameIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 130, -1));

        lastNameIn.setBackground(new java.awt.Color(24, 39, 34));
        lastNameIn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lastNameIn.setForeground(new java.awt.Color(255, 255, 255));
        lastNameIn.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lastNameIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lastNameInKeyPressed(evt);
            }
        });
        getContentPane().add(lastNameIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 140, -1));

        weekIn1.setBackground(new java.awt.Color(24, 39, 34));
        weekIn1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        weekIn1.setForeground(new java.awt.Color(255, 255, 255));
        weekIn1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        weekIn1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                weekIn1KeyPressed(evt);
            }
        });
        getContentPane().add(weekIn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 80, -1));

        weekIn2.setBackground(new java.awt.Color(24, 39, 34));
        weekIn2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        weekIn2.setForeground(new java.awt.Color(255, 255, 255));
        weekIn2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        weekIn2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                weekIn2KeyPressed(evt);
            }
        });
        getContentPane().add(weekIn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, 80, -1));

        weekIn3.setBackground(new java.awt.Color(24, 39, 34));
        weekIn3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        weekIn3.setForeground(new java.awt.Color(255, 255, 255));
        weekIn3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        weekIn3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                weekIn3KeyPressed(evt);
            }
        });
        getContentPane().add(weekIn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 80, -1));

        weekIn4.setBackground(new java.awt.Color(24, 39, 34));
        weekIn4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        weekIn4.setForeground(new java.awt.Color(255, 255, 255));
        weekIn4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        weekIn4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                weekIn4KeyPressed(evt);
            }
        });
        getContentPane().add(weekIn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 260, 80, -1));

        add.setBackground(new java.awt.Color(24, 39, 34));
        add.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        add.setForeground(new java.awt.Color(0, 224, 145));
        add.setText("Add Passenger");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 310, 140, 30));

        clear.setBackground(new java.awt.Color(24, 39, 34));
        clear.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        clear.setForeground(new java.awt.Color(0, 224, 145));
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 490, 140, 30));

        list.setBackground(new java.awt.Color(24, 39, 34));
        list.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        list.setForeground(new java.awt.Color(0, 224, 145));
        list.setText("List Passengers");
        list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listActionPerformed(evt);
            }
        });
        getContentPane().add(list, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 490, 140, 30));

        total.setBackground(new java.awt.Color(24, 39, 34));
        total.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        total.setForeground(new java.awt.Color(0, 224, 145));
        total.setText("Total");
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });
        getContentPane().add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 590, 80, 30));

        successLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        successLabel.setForeground(new java.awt.Color(0, 204, 51));
        successLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(successLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 640, 490, 20));

        errorLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(errorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 640, 430, 20));

        dataTable.setBackground(new java.awt.Color(24, 39, 34));
        dataTable.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        dataTable.setForeground(new java.awt.Color(0, 224, 145));
        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Week 1", "Week 2", "Week 3", "Week 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataTable.setGridColor(new java.awt.Color(255, 255, 255));
        dataTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(dataTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, 130));

        totalTable.setBackground(new java.awt.Color(24, 39, 34));
        totalTable.setForeground(new java.awt.Color(0, 224, 145));
        totalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Total Points", "Bonus Points"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        totalTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(totalTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 450, 50));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 630, 440, 10));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 440, 10));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 440, 10));

        airlineGFX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/airLinePointsGFX.png"))); // NOI18N
        getContentPane().add(airlineGFX, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        //format output
        clearOut();

        // initialize variables and set values
        airlineData passenger;
        boolean emptyFirst = firstNameIn.getText().trim().isEmpty();
        boolean emptyLast = lastNameIn.getText().trim().isEmpty();
        int weekA, weekB, weekC, weekD, sum;
        String qualified, message = "";

        //check if string inputs are empty
        if (emptyFirst) {
            successLabel.setText("");
            errorLabel.setText("Please enter the passenger's First Name.");
            firstNameIn.setText("");
            firstNameIn.requestFocus();

        } else if (emptyLast) {
            successLabel.setText("");
            errorLabel.setText("Please enter the passenger's Last Name.");
            lastNameIn.setText("");
            lastNameIn.requestFocus();

            //validate points input
        } else {

            //week 1
            try {
                weekA = Integer.parseInt(weekIn1.getText());
            } catch (NumberFormatException e) {
                successLabel.setText("");
                errorLabel.setText("Week 1 points entered are"
                        + " invalid.");
                weekIn1.setText("");
                weekIn1.requestFocus();
                return;
            }
            //week 2
            try {
                weekB = Integer.parseInt(weekIn2.getText());
            } catch (NumberFormatException f) {
                successLabel.setText("");
                errorLabel.setText("Week 2 points entered are invalid.");
                weekIn2.setText("");
                weekIn2.requestFocus();
                return;
            }
            //week 3
            try {
                weekC = Integer.parseInt(weekIn3.getText());
            } catch (NumberFormatException g) {
                successLabel.setText("");
                errorLabel.setText("Week 3 points entered are invalid.");
                weekIn3.setText("");
                weekIn3.requestFocus();
                return;
            }
            //week 4
            try {
                weekD = Integer.parseInt(weekIn4.getText());
            } catch (NumberFormatException h) {
                successLabel.setText("");
                errorLabel.setText("Week 4 points entered are invalid.");
                weekIn4.setText("");
                weekIn4.requestFocus();
                return;
            }

            //calculate total points
            sum = weekA + weekB + weekC + weekD;

            //check if passenger qualifies for a bonus
            if (sum > 5000) {
                qualified = "1000";
                message = "They qualify for a bonus!";
            } else {
                qualified = "0";
            }

            //assign values to obeject elements
            String firstName = firstNameIn.getText();
            String lastName = lastNameIn.getText();
            String week1 = weekIn1.getText();
            String week2 = weekIn2.getText();
            String week3 = weekIn3.getText();
            String week4 = weekIn4.getText();
            String totalPoints = String.valueOf(sum);
            String bonus = qualified;

            //add object elements to the array
            passenger = new airlineData(firstName, lastName,
                    week1, week2, week3, week4, totalPoints, bonus);
            airlineList.add(passenger);

            //format output
            errorLabel.setText("");
            successLabel.setText(firstName + " " + lastName
                    + "'s points have been added! " + message);
            firstNameIn.setText("");
            lastNameIn.setText("");
            weekIn1.setText("");
            weekIn2.setText("");
            weekIn3.setText("");
            weekIn4.setText("");
            dataTable.setVisible(false);

        }
    }//GEN-LAST:event_addActionPerformed

    private void listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listActionPerformed
        //format output
        clearOut();

        //initialize and declare variable values
        DefaultTableModel airline = (DefaultTableModel) dataTable.getModel();
        Object rowData[] = new Object[6];
        dataTable.setVisible(true);

        //validate user input
        if (0 == airlineList.size()) {
            //clear table
            for (int i = airline.getRowCount() - 1; i >= 0; i--) {
                airline.removeRow(i);
            }
            //format output
            successLabel.setText("");
            errorLabel.setText("There are no passengers to list.");
            firstNameIn.requestFocus();

        } else if (count == airlineList.size()) {
            //display error message
            successLabel.setText("");
            errorLabel.setText("No other passengers have been entered in"
                    + " the list.");

        } else {
            //add stored data to the table
            for (int i = count; i < airlineList.size(); i++) {
                rowData[0] = airlineList.get(i).firstName;
                rowData[1] = airlineList.get(i).lastName;
                rowData[2] = airlineList.get(i).week1;
                rowData[3] = airlineList.get(i).week2;
                rowData[4] = airlineList.get(i).week3;
                rowData[5] = airlineList.get(i).week4;
                airline.addRow(rowData);
                count = i + 1;
            }
        }
    }//GEN-LAST:event_listActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        //format output
        clearOut();

        // variable declaration and initialization
        String name = (firstNameIn.getText() + " "
                + lastNameIn.getText()).toLowerCase();
        String name2;
        DefaultTableModel airline2 = (DefaultTableModel) totalTable.getModel();
        Object rowData2[] = new Object[4];

        //validate input
        if (airlineList.isEmpty() == true) {
            successLabel.setText("");
            errorLabel.setText("There are no passengers to total.");
            firstNameIn.requestFocus();

        } else {

            for (int i = 0; i < airlineList.size(); i++) {
                //get stored names from array
                name2 = String.valueOf(airlineList.get(i).firstName + " "
                        + airlineList.get(i).lastName).toLowerCase();

                //check if entered name is in the list
                if (name2.equals(name)) {
                    totalTable.setVisible(true);

                    //empty table
                    for (int j = airline2.getRowCount() - 1; j >= 0; j--) {
                        airline2.removeRow(j);
                    }
                    //retrieve objects from array and add to table
                    rowData2[0] = airlineList.get(i).firstName;
                    rowData2[1] = airlineList.get(i).lastName;
                    rowData2[2] = airlineList.get(i).totalPoints;
                    rowData2[3] = airlineList.get(i).bonus;
                    airline2.addRow(rowData2);

                    //format output
                    errorLabel.setText("");
                    firstNameIn.setText("");
                    lastNameIn.setText("");
                    successLabel.setText("Passenger data has been generated!");
                    firstNameIn.requestFocus();
                    return;

                } else {
                    //format output and display error
                    firstNameIn.setText("");
                    lastNameIn.setText("");
                    successLabel.setText("");
                    errorLabel.setText("Enter a passenger's full name "
                            + "that is on the list, then click \"Total\".");
                    firstNameIn.requestFocus();
                }

            }
        }

    }//GEN-LAST:event_totalActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        //check if the data is already clear
        if (airlineList.isEmpty() == true) {
            successLabel.setText("");
            errorLabel.setText("There is no data to clear!");
            firstNameIn.requestFocus();

            //confirm that the user wishes to clear data
        } else {
            int YesOrNo = JOptionPane.showConfirmDialog(null,
                    "Are you sure you wish to clear all passenger data?",
                    "Confirmation",
                    JOptionPane.YES_NO_OPTION);

            //clear all data and format output
            if (YesOrNo == 0) {
                airlineList.clear();
                count = 0;
                dataTable.setVisible(false);
                totalTable.setVisible(false);
                errorLabel.setText("");
                successLabel.setText("All data has been cleared!");

                //tell the user that the process has been aborted
            } else {
                errorLabel.setText("");
                successLabel.setText("Successfully aborted!");
            }
        }
    }//GEN-LAST:event_clearActionPerformed

    private void firstNameInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstNameInKeyPressed
        clearOut();
    }//GEN-LAST:event_firstNameInKeyPressed

    private void lastNameInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lastNameInKeyPressed
        clearOut();
    }//GEN-LAST:event_lastNameInKeyPressed

    private void weekIn1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_weekIn1KeyPressed
        clearOut();
    }//GEN-LAST:event_weekIn1KeyPressed

    private void weekIn2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_weekIn2KeyPressed
        clearOut();
    }//GEN-LAST:event_weekIn2KeyPressed

    private void weekIn3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_weekIn3KeyPressed
        clearOut();
    }//GEN-LAST:event_weekIn3KeyPressed

    private void weekIn4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_weekIn4KeyPressed
        clearOut();
    }//GEN-LAST:event_weekIn4KeyPressed

    private class airlineData {
        //initialize variables
        String firstName, lastName, week1, week2, week3, week4, totalPoints,
                bonus;

        //initialize the object with elements
        airlineData(String _firstName, String _lastName, String _week1,
                String _week2, String _week3, String _week4,
                String _totalPoints, String _bonus) {

            firstName = _firstName;
            lastName = _lastName;
            week1 = _week1;
            week2 = _week2;
            week3 = _week3;
            week4 = _week4;
            totalPoints = _totalPoints;
            bonus = _bonus;
        }
    }

    private void clearOut() {
        //clear outputs
        errorLabel.setText("");
        successLabel.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AirlinePoints.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AirlinePoints.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AirlinePoints.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AirlinePoints.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AirlinePoints().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JLabel airlineGFX;
    private javax.swing.JButton clear;
    private javax.swing.JTable dataTable;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JTextField firstNameIn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField lastNameIn;
    private javax.swing.JButton list;
    private javax.swing.JLabel successLabel;
    private javax.swing.JButton total;
    private javax.swing.JTable totalTable;
    private javax.swing.JTextField weekIn1;
    private javax.swing.JTextField weekIn2;
    private javax.swing.JTextField weekIn3;
    private javax.swing.JTextField weekIn4;
    // End of variables declaration//GEN-END:variables
}
