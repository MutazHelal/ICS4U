/*
 * Mutaz Helal
 * November 6, 2019
 * Sum Elements
 * This program stores and displays integer values in an array.
 */

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;

public class SumElements extends javax.swing.JFrame {

    List<Integer> numList = new ArrayList<>();

    /**
     * Creates new form SumElements
     */
    public SumElements() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        numIn = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        displayAll = new javax.swing.JButton();
        displayEven = new javax.swing.JButton();
        displayOdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outArea = new javax.swing.JTextArea();
        sumLabel = new javax.swing.JLabel();
        errorLabel = new javax.swing.JLabel();
        successLabel = new javax.swing.JLabel();
        sumElementsGFX = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        numIn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        numIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                numInKeyPressed(evt);
            }
        });
        getContentPane().add(numIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 50, 30));

        add.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        add.setForeground(new java.awt.Color(199, 48, 61));
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, 60, 30));

        remove.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        remove.setForeground(new java.awt.Color(199, 48, 61));
        remove.setText("Remove");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });
        getContentPane().add(remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, -1, 30));

        clear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        clear.setForeground(new java.awt.Color(199, 48, 61));
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 170, 80, 30));

        displayAll.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        displayAll.setForeground(new java.awt.Color(199, 48, 61));
        displayAll.setText("Display All");
        displayAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAllActionPerformed(evt);
            }
        });
        getContentPane().add(displayAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 480, 110, 30));

        displayEven.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        displayEven.setForeground(new java.awt.Color(199, 48, 61));
        displayEven.setText("Display Even");
        displayEven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayEvenActionPerformed(evt);
            }
        });
        getContentPane().add(displayEven, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 480, 110, 30));

        displayOdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        displayOdd.setForeground(new java.awt.Color(199, 48, 61));
        displayOdd.setText("Display Odd");
        displayOdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayOddActionPerformed(evt);
            }
        });
        getContentPane().add(displayOdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 480, 110, 30));

        outArea.setEditable(false);
        outArea.setBackground(new java.awt.Color(62, 71, 95));
        outArea.setColumns(20);
        outArea.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        outArea.setForeground(new java.awt.Color(255, 255, 255));
        outArea.setRows(5);
        outArea.setText("List will appear here.");
        outArea.setAutoscrolls(false);
        outArea.setBorder(null);
        jScrollPane1.setViewportView(outArea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, 390, 230));

        sumLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        sumLabel.setForeground(new java.awt.Color(62, 71, 95));
        getContentPane().add(sumLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 540, 150, 20));

        errorLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(errorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 340, 20));

        successLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        successLabel.setForeground(new java.awt.Color(0, 153, 0));
        getContentPane().add(successLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 340, 20));

        sumElementsGFX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SumElements.png"))); // NOI18N
        getContentPane().add(sumElementsGFX, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        //initialize variable and format output
        int num;
        clearOut();

        //validate that user input is an integer value
        try {
            num = Integer.parseInt(numIn.getText());
        } catch (NumberFormatException e) {
            successLabel.setText("");
            errorLabel.setText("Please input a valid number.");
            focus();
            return;
        }

        //add user input to the array and format output
        numList.add(num);
        errorLabel.setText("");
        successLabel.setText(num + " Successfully Added!");
        focus();
    }//GEN-LAST:event_addActionPerformed

    private void displayAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAllActionPerformed
        //initialize variables and format interface
        int sum = 0;
        String nums = "List of Numbers:";
        clearOut();
        Collections.sort(numList);

        //append elements to the list and calculate sum
        for (int i = 0; i < numList.size(); i++) {
            nums = nums + "\n " + numList.get(i);
            sum = sum + numList.get(i);
        }

        //display full number list and sum
        outArea.setText(nums);
        sumLabel.setText(String.valueOf(sum));
        numIn.requestFocus();
    }//GEN-LAST:event_displayAllActionPerformed

    private void displayEvenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayEvenActionPerformed
        //intialize and format output
        int evenSum = 0;
        String evenNums = "List of Even Numbers:";
        clearOut();
        Collections.sort(numList);

        //append elements to the list and calculate sum
        for (int i = 0; i < numList.size(); i++) {
            if (numList.get(i) % 2 == 0) {
                evenNums = evenNums + "\n " + numList.get(i);
                evenSum = evenSum + numList.get(i);
            }
        }

        //display even number list and sum
        outArea.setText(evenNums);
        sumLabel.setText(String.valueOf(evenSum));
        numIn.requestFocus();
    }//GEN-LAST:event_displayEvenActionPerformed

    private void displayOddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayOddActionPerformed
        //initialize and format output
        int oddSum = 0;
        String oddNums = "List of Odd Numbers:";
        clearOut();
        Collections.sort(numList);

        //create odd number list and calculate sum
        for (int i = 0; i < numList.size(); i++) {
            if (numList.get(i) % 2 != 0) {
                oddNums = oddNums + "\n " + numList.get(i);
                oddSum = oddSum + numList.get(i);
            }
        }

        //display odd number list and sum
        outArea.setText(oddNums);
        sumLabel.setText(String.valueOf(oddSum));
        numIn.requestFocus();
    }//GEN-LAST:event_displayOddActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        //initialize variable   
        int num;

        //validate that user input is an integer value
        try {
            num = Integer.parseInt(numIn.getText());
        } catch (NumberFormatException e) {
            successLabel.setText("");
            errorLabel.setText("Please input a valid number.");
            focus();
            return;
        }

        //check if list is empty and display error
        if (numList.isEmpty()) {
            successLabel.setText("");
            errorLabel.setText("There are no numbers in the list to remove.");
            focus();
        }

        //loop till there is a match, once removed exit loop
        for (int i = 0; i < numList.size(); i++) {
            if (numList.get(i) == num) {
                numList.remove(i);
                errorLabel.setText("");
                successLabel.setText(num + " Successfully Removed!");
                outArea.setText("");
                sumLabel.setText("");
                focus();
                return;

                //tell the user that there is not such number in list
            } else {
                successLabel.setText("");
                errorLabel.setText("Please enter a number that is present in "
                        + "the list.");
                focus();
            }
        }
    }//GEN-LAST:event_removeActionPerformed

    private void numInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numInKeyPressed
        //clear labels
        errorLabel.setText("");
        successLabel.setText("");
    }//GEN-LAST:event_numInKeyPressed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        //check if list is empty and display an error
        if (numList.isEmpty()) {
            successLabel.setText("");
            errorLabel.setText("The list is already empty.");
            focus();

            //confirm that the user wishes to clear their number list   
        } else {
            int YesOrNo = JOptionPane.showConfirmDialog(null,
                    "Are you sure you wish to clear your list of numbers?",
                    "Confirmation",
                    JOptionPane.YES_NO_OPTION);

            //clear the array list and format output
            if (YesOrNo == 0) {
                numList.clear();
                errorLabel.setText("");
                successLabel.setText("The list has been cleared!");
                outArea.setText("");
                sumLabel.setText("");
                focus();

                //tell the user that the process has been aborted
            } else {
                errorLabel.setText("");
                successLabel.setText("Successfully aborted!");
            }
        }
    }//GEN-LAST:event_clearActionPerformed
    private void clearOut() {
        //clear outputs
        errorLabel.setText("");
        successLabel.setText("");
        outArea.setText("");
        sumLabel.setText("");
    }

    private void focus() {
        //clear input and focus the input
        numIn.setText("");
        numIn.requestFocus();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SumElements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SumElements().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton clear;
    private javax.swing.JButton displayAll;
    private javax.swing.JButton displayEven;
    private javax.swing.JButton displayOdd;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField numIn;
    private javax.swing.JTextArea outArea;
    private javax.swing.JButton remove;
    private javax.swing.JLabel successLabel;
    private javax.swing.JLabel sumElementsGFX;
    private javax.swing.JLabel sumLabel;
    // End of variables declaration//GEN-END:variables
}
