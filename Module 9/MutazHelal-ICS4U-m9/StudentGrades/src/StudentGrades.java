/*
 * Mutaz Helal
 * November 25, 2019
 * StudentGrades
 * This program incorporates a two-dimensional array to display student grades.
 */

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class StudentGrades extends javax.swing.JFrame {

    //initialize arrays
    int[][] grades = new int[15][4];

    List<String> namesTemp = new ArrayList<>();
    List<String> names = new ArrayList<>();

    //initialize global variables
    static String testResults = "Test Results:";
    static int classAverage = 0;
    static int students = 0;

    /**
     * Creates new form StudentGrades
     */
    public StudentGrades() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        percent1 = new javax.swing.JLabel();
        percent2 = new javax.swing.JLabel();
        percent3 = new javax.swing.JLabel();
        percent4 = new javax.swing.JLabel();
        courseAverage = new javax.swing.JButton();
        add = new javax.swing.JButton();
        studentAverage = new javax.swing.JButton();
        list = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outArea = new javax.swing.JTextArea();
        test3 = new javax.swing.JTextField();
        test1 = new javax.swing.JTextField();
        test2 = new javax.swing.JTextField();
        test4 = new javax.swing.JTextField();
        firstName = new javax.swing.JTextField();
        lastName = new javax.swing.JTextField();
        successLabel = new javax.swing.JLabel();
        errorLabel = new javax.swing.JLabel();
        studentGradesGFX = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        percent1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        percent1.setText("%");
        getContentPane().add(percent1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 20, 20));

        percent2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        percent2.setText("%");
        getContentPane().add(percent2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 20, 20));

        percent3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        percent3.setText("%");
        getContentPane().add(percent3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 190, 20, 20));

        percent4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        percent4.setText("%");
        getContentPane().add(percent4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 230, 20, 20));

        courseAverage.setText("course average");
        courseAverage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseAverageActionPerformed(evt);
            }
        });
        getContentPane().add(courseAverage, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 120, 30));

        add.setText("add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 230, 60, 30));

        studentAverage.setText("student average");
        studentAverage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentAverageActionPerformed(evt);
            }
        });
        getContentPane().add(studentAverage, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, -1, 30));

        list.setText("list");
        list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listActionPerformed(evt);
            }
        });
        getContentPane().add(list, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 270, 60, 30));

        outArea.setColumns(20);
        outArea.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        outArea.setRows(5);
        outArea.setFocusable(false);
        jScrollPane1.setViewportView(outArea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 530, 210));

        test3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        test3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        test3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                test3KeyPressed(evt);
            }
        });
        getContentPane().add(test3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 50, 40));

        test1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        test1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        test1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                test1KeyPressed(evt);
            }
        });
        getContentPane().add(test1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 50, 40));

        test2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        test2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        test2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                test2KeyPressed(evt);
            }
        });
        getContentPane().add(test2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, 50, 40));

        test4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        test4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        test4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                test4KeyPressed(evt);
            }
        });
        getContentPane().add(test4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, 50, 40));

        firstName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        firstName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                firstNameKeyPressed(evt);
            }
        });
        getContentPane().add(firstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 110, 30));

        lastName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lastNameKeyPressed(evt);
            }
        });
        getContentPane().add(lastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, 100, 30));

        successLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        successLabel.setForeground(new java.awt.Color(0, 153, 0));
        getContentPane().add(successLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 560, 510, 30));

        errorLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(errorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 560, 510, 30));

        studentGradesGFX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/studentGrades.png"))); // NOI18N
        getContentPane().add(studentGradesGFX, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        //initialize and set variable values
        String name = firstName.getText() + " " + lastName.getText();
        boolean emptyFirst = firstName.getText().trim().isEmpty();
        boolean emptyLast = lastName.getText().trim().isEmpty();
        int gradesSum = 0;

        //validate name input
        if (emptyFirst) {
            successLabel.setText("");
            errorLabel.setText("Please enter the student's first name.");
            firstName.requestFocus();
        } else if (emptyLast) {
            successLabel.setText("");
            errorLabel.setText("Please enter the student's Last name.");
            lastName.requestFocus();
        } else {

            //validate grade input and set array values
            try {
                grades[0][0] = Integer.parseInt(test1.getText());
                grades[0][1] = Integer.parseInt(test2.getText());
                grades[0][2] = Integer.parseInt(test3.getText());
                grades[0][3] = Integer.parseInt(test4.getText());
            } catch (NumberFormatException e) {
                successLabel.setText("");
                errorLabel.setText("Please enter valid test grades.");
                return;
            }

            //validate the numerical value of each grades input
            if (grades[0][0] > 100 || grades[0][0] < 0) {
                successLabel.setText("");
                errorLabel.setText("Please enter a grade between 1 and 100 "
                        + "for test 1.");
                test1.setText("");
                test1.requestFocus();
                return;
            }
            if (grades[0][1] > 100 || grades[0][1] < 0) {
                successLabel.setText("");
                errorLabel.setText("Please enter a grade between 1 and 100 "
                        + "for test 2.");
                test2.setText("");
                test2.requestFocus();
                return;
            }
            if (grades[0][2] > 100 || grades[0][2] < 0) {
                successLabel.setText("");
                errorLabel.setText("Please enter a grade between 1 and 100 "
                        + "for test 3.");
                test3.setText("");
                test3.requestFocus();
                return;
            }
            if (grades[0][3] > 100 || grades[0][3] < 0) {
                successLabel.setText("");
                errorLabel.setText("Please enter a grade between 1 and 100 "
                        + "for test 4.");
                test4.setText("");
                test4.requestFocus();
                return;
            }

            //format display of two-dimensional array and add up the grade sum
            testResults = testResults + "\n" + name + ": ";
            for (int row = 0; row <= 0; row++) {
                for (int col = 0; col <= 3; col++) {
                    int temp = col + 1;
                    testResults = testResults + "[Test " + temp + "]: "
                            + String.valueOf(grades[row][col]) + "% ";
                    gradesSum = gradesSum + (grades[row][col]);
                }
            }

            //calculate individual student averages
            int avg = gradesSum / 4;

            //add names and averages to the arrays and sum up the class averages
            namesTemp.add(name);
            names.add(name + ": " + String.valueOf(avg) + "%");
            classAverage = (classAverage + avg);

            //format output and increment student count
            firstName.setText("");
            lastName.setText("");
            test1.setText("");
            test2.setText("");
            test3.setText("");
            test4.setText("");
            outArea.setText("");
            errorLabel.setText("");
            successLabel.setText(name + "'s grades were successfuly added!");
            students++;
        }

    }//GEN-LAST:event_addActionPerformed

    private void listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listActionPerformed
        clearOut();

        //validate and display test results
        if ("Test Results:".equals(testResults)) {
            errorLabel.setText("There are no grades to show.");
        } else {
            outArea.setText(testResults);
        }

    }//GEN-LAST:event_listActionPerformed

    private void studentAverageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentAverageActionPerformed
        //fprmat output
        clearOut();
        outArea.setText("");

        //sort the arrays
        Collections.sort(names, String.CASE_INSENSITIVE_ORDER);
        Collections.sort(namesTemp, String.CASE_INSENSITIVE_ORDER);

        //initialize and set variable values
        String name = firstName.getText() + " " + lastName.getText();
        int index = Collections.binarySearch(namesTemp,
                name, String.CASE_INSENSITIVE_ORDER);

        //check if the name is in the array, if so, show that student's average
        if (index < 0) {
            successLabel.setText("");
            errorLabel.setText("Enter a student's name that is on the list,"
                    + " then click \"sudent average\".");
            firstName.requestFocus();
        } else {
            outArea.setText(names.get(index));
        }
        
        //format output
        firstName.setText("");
        lastName.setText("");
    }//GEN-LAST:event_studentAverageActionPerformed

    private void courseAverageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseAverageActionPerformed
        clearOut();

        //validate,calculate, and display course average
        if (students == 0) {
            errorLabel.setText("There are no grades to calculate!");
        } else {
            outArea.setText("Course Average: "
                    + String.valueOf(classAverage / students) + "%");
        }
    }//GEN-LAST:event_courseAverageActionPerformed

    private void firstNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstNameKeyPressed
        // TODO add your handling code here:
        clearOut();
    }//GEN-LAST:event_firstNameKeyPressed

    private void lastNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lastNameKeyPressed
        // TODO add your handling code here:
        clearOut();
    }//GEN-LAST:event_lastNameKeyPressed

    private void test1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_test1KeyPressed
        // TODO add your handling code here:
        clearOut();
    }//GEN-LAST:event_test1KeyPressed

    private void test2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_test2KeyPressed
        // TODO add your handling code here:
        clearOut();
    }//GEN-LAST:event_test2KeyPressed

    private void test3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_test3KeyPressed
        // TODO add your handling code here:
        clearOut();
    }//GEN-LAST:event_test3KeyPressed

    private void test4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_test4KeyPressed
        // TODO add your handling code here:
        clearOut();
    }//GEN-LAST:event_test4KeyPressed
    private void clearOut() {
        //clear labels
        errorLabel.setText("");
        successLabel.setText("");

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info
                    : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException
                | IllegalAccessException
                | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentGrades.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new StudentGrades().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton courseAverage;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JTextField firstName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastName;
    private javax.swing.JButton list;
    private javax.swing.JTextArea outArea;
    private javax.swing.JLabel percent1;
    private javax.swing.JLabel percent2;
    private javax.swing.JLabel percent3;
    private javax.swing.JLabel percent4;
    private javax.swing.JButton studentAverage;
    private javax.swing.JLabel studentGradesGFX;
    private javax.swing.JLabel successLabel;
    private javax.swing.JTextField test1;
    private javax.swing.JTextField test2;
    private javax.swing.JTextField test3;
    private javax.swing.JTextField test4;
    // End of variables declaration//GEN-END:variables
}
