/*
 * Mutaz Helal
 * March 3
 * FibonacciNumbers
 * This application uses a recursive function to find the value of the nth 
 * Fibonacci number.
 */

public class FibonacciNumbers extends javax.swing.JFrame {

    /**
     * Creates new form FibonacciNumbers
     */
    public FibonacciNumbers() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        term = new javax.swing.JTextField();
        findButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        nTerm = new javax.swing.JLabel();
        termValue = new javax.swing.JLabel();
        fibGFX = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        term.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        term.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        term.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                termKeyPressed(evt);
            }
        });
        getContentPane().add(term, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 60, 30));

        findButton.setText("Calculate");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });
        getContentPane().add(findButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 340, -1, -1));

        errorLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        errorLabel.setForeground(new java.awt.Color(153, 0, 0));
        errorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(errorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, 440, 20));

        nTerm.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        nTerm.setForeground(new java.awt.Color(255, 255, 255));
        nTerm.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        getContentPane().add(nTerm, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 390, 200, 40));

        termValue.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        termValue.setForeground(new java.awt.Color(255, 255, 255));
        termValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(termValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 390, 30, 40));

        fibGFX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fibonacciGFX.png"))); // NOI18N
        getContentPane().add(fibGFX, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        //initialize variable
        int termNum;

        //validate input
        try {
            termNum = Integer.parseInt(term.getText());
        } catch (NumberFormatException e) {
            errorLabel.setText("Please enter a valid term number.");
            term.setText("");
            term.requestFocus();
            return;
        }

        //validate term value
        if (termNum <= 0) {
            errorLabel.setText("Entered term should be greater than 0.");
            term.setText("");
            term.requestFocus();

        } else if (termNum > 45) {
            errorLabel.setText("This program can't handle that request."
                    + " Try a term below 45.");
            term.setText("");
            term.requestFocus();

            //call fib function recursively on enetered value 
        } else {
            nTerm.setText(String.valueOf(fib(termNum)));
            termValue.setText(String.valueOf(termNum));
        }
    }//GEN-LAST:event_findButtonActionPerformed

    private void termKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_termKeyPressed
        //format output
        errorLabel.setText("");
        term.requestFocus();
    }//GEN-LAST:event_termKeyPressed

    private static int fib(int n) {
        //apply fibonacci sequence
        if (n == 1 || n == 2) {
            return 1;
        }
        return fib(n - 1) + fib(n - 2);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FibonacciNumbers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FibonacciNumbers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FibonacciNumbers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FibonacciNumbers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FibonacciNumbers().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel fibGFX;
    private javax.swing.JButton findButton;
    private javax.swing.JLabel nTerm;
    private javax.swing.JTextField term;
    private javax.swing.JLabel termValue;
    // End of variables declaration//GEN-END:variables
}
