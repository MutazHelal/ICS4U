/*
 * Mutaz Helal
 * November 28
 * EmployeeRecords
 * This program uses an array of data objects to store 
 * and display employee records.
 */

import java.util.ArrayList;

public class EmployeeRecords extends javax.swing.JFrame {

    ArrayList<employees> employeesComp = new ArrayList<>();

    /**
     * Creates new form EmployeeRecords
     */
    public EmployeeRecords() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        employeeIdIn = new javax.swing.JTextField();
        firstNameIn = new javax.swing.JTextField();
        lastNameIn = new javax.swing.JTextField();
        startDateIn = new javax.swing.JTextField();
        salaryIn = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        list = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeesOut = new javax.swing.JTextArea();
        errorLabel = new javax.swing.JLabel();
        successLabel = new javax.swing.JLabel();
        employeeRecordsGFX = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        employeeIdIn.setBackground(new java.awt.Color(86, 203, 249));
        employeeIdIn.setForeground(new java.awt.Color(255, 255, 255));
        employeeIdIn.setCaretColor(new java.awt.Color(255, 255, 255));
        employeeIdIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                employeeIdInKeyPressed(evt);
            }
        });
        getContentPane().add(employeeIdIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 180, 30));

        firstNameIn.setBackground(new java.awt.Color(86, 203, 249));
        firstNameIn.setForeground(new java.awt.Color(255, 255, 255));
        firstNameIn.setCaretColor(new java.awt.Color(255, 255, 255));
        firstNameIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                firstNameInKeyPressed(evt);
            }
        });
        getContentPane().add(firstNameIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, 180, 30));

        lastNameIn.setBackground(new java.awt.Color(86, 203, 249));
        lastNameIn.setForeground(new java.awt.Color(255, 255, 255));
        lastNameIn.setCaretColor(new java.awt.Color(255, 255, 255));
        lastNameIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lastNameInKeyPressed(evt);
            }
        });
        getContentPane().add(lastNameIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, 180, 30));

        startDateIn.setBackground(new java.awt.Color(86, 203, 249));
        startDateIn.setForeground(new java.awt.Color(255, 255, 255));
        startDateIn.setCaretColor(new java.awt.Color(255, 255, 255));
        startDateIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                startDateInKeyPressed(evt);
            }
        });
        getContentPane().add(startDateIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 260, 180, 30));

        salaryIn.setBackground(new java.awt.Color(86, 203, 249));
        salaryIn.setForeground(new java.awt.Color(255, 255, 255));
        salaryIn.setCaretColor(new java.awt.Color(255, 255, 255));
        salaryIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                salaryInKeyPressed(evt);
            }
        });
        getContentPane().add(salaryIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 300, 180, 30));

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 340, -1, -1));

        list.setText("List");
        list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listActionPerformed(evt);
            }
        });
        getContentPane().add(list, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 340, -1, -1));

        remove.setText("Remove");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });
        getContentPane().add(remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, -1, -1));

        employeesOut.setEditable(false);
        employeesOut.setBackground(new java.awt.Color(86, 203, 249));
        employeesOut.setColumns(20);
        employeesOut.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        employeesOut.setForeground(new java.awt.Color(26, 50, 64));
        employeesOut.setRows(5);
        jScrollPane1.setViewportView(employeesOut);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 450, 230));

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        errorLabel.setFocusable(false);
        errorLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(errorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, 420, 30));

        successLabel.setForeground(new java.awt.Color(0, 204, 0));
        successLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        successLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(successLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, 410, 30));

        employeeRecordsGFX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/employeeRecordsGFX.png"))); // NOI18N
        getContentPane().add(employeeRecordsGFX, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 530, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // initialize and set variables
        employees employee;
        boolean emptyFirst = firstNameIn.getText().trim().isEmpty();
        boolean emptyLast = lastNameIn.getText().trim().isEmpty();
        boolean emptyStartDate = startDateIn.getText().trim().isEmpty();

        //validate employeeID input
        try {
            Integer.parseInt(employeeIdIn.getText());
        } catch (NumberFormatException e) {
            successLabel.setText("");
            errorLabel.setText("Please enter a valid employee ID.");
            employeeIdIn.requestFocus();
            return;
        }

        //check if string inputs are empty
        if (emptyFirst) {
            successLabel.setText("");
            errorLabel.setText("Please enter the employee's First Name.");
            firstNameIn.requestFocus();
        } else if (emptyLast) {
            successLabel.setText("");
            errorLabel.setText("Please enter the employee's Last Name.");
            lastNameIn.requestFocus();
        } else if (emptyStartDate) {
            successLabel.setText("");
            errorLabel.setText("Please enter the employee's Start Date.");
            startDateIn.requestFocus();
        } else {

            //validate salary input
            try {
                Integer.parseInt(salaryIn.getText());
            } catch (NumberFormatException e) {
                successLabel.setText("");
                errorLabel.setText("Please enter a valid employee salary.");
                salaryIn.requestFocus();
                return;
            }

            //get user inputs
            String id = employeeIdIn.getText();
            String annualSalary = salaryIn.getText();
            String firstName = firstNameIn.getText();
            String lastName = lastNameIn.getText();
            String startDate = startDateIn.getText();

            //call new object and add obect to the array
            employee = new employees(id, firstName, lastName, annualSalary,
                    startDate);
            employeesComp.add(employee);

            //format output
            errorLabel.setText("");
            successLabel.setText("Employee#" + id
                    + "'s details have been added!");
            employeesOut.setText("");
            employeeIdIn.setText("");
            salaryIn.setText("");
            firstNameIn.setText("");
            lastNameIn.setText("");
            startDateIn.setText("");
        }
    }//GEN-LAST:event_addActionPerformed

    private void listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listActionPerformed
        //initialization
        clearOut();
        String temp = "";

        //display the data stored to the user
        for (int i = 0; i <= employeesComp.size() - 1; i++) {
            temp = temp + "Employee #: " + employeesComp.get(i).id
                    + "   Name: " + employeesComp.get(i).firstName + " "
                    + employeesComp.get(i).lastName + "   Salary: "
                    + employeesComp.get(i).annualSalary + "   Start Date: "
                    + employeesComp.get(i).startDate + "\n";
        }
        employeesOut.setText(temp);

        //tell the user there is no data stored
        if ("".equals(temp)) {
            successLabel.setText("");
            errorLabel.setText("There is nothing to show here!");

        }
    }//GEN-LAST:event_listActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        //initialize
        int employeeId;
        String id = employeeIdIn.getText();

        //check if array is empty
        if (employeesComp.isEmpty()) {
            successLabel.setText("");
            errorLabel.setText("There are no employee ID's to remove.");
        } else {

            //validate employeeId input
            try {
                employeeId = Integer.parseInt(employeeIdIn.getText());
            } catch (NumberFormatException e) {
                successLabel.setText("");
                errorLabel.setText("Please enter a valid employee ID you'd"
                        + " like to remove.");
                employeeIdIn.requestFocus();
                return;
            }

            //loop through array and remove ovject with employeeId
            for (int i = 0; i <= employeesComp.size() - 1; i++) {
                if (employeeId == (Integer.parseInt(employeesComp.get(i).id))) {
                    employeesComp.remove(i);
                    errorLabel.setText("");
                    successLabel.setText("Employee#" + id
                            + " has been successfuly removed!");
                    employeeIdIn.setText("");
                    employeesOut.setText("");
                    return;

                    //tell the user there were no matches found
                } else {
                    successLabel.setText("");
                    errorLabel.setText("There are no employees with ID #"
                            + id + ".");
                    employeeIdIn.setText("");
                }
            }
        }
    }//GEN-LAST:event_removeActionPerformed

    private void employeeIdInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employeeIdInKeyPressed
        clearOut();
    }//GEN-LAST:event_employeeIdInKeyPressed

    private void firstNameInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstNameInKeyPressed
        clearOut();
    }//GEN-LAST:event_firstNameInKeyPressed

    private void lastNameInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lastNameInKeyPressed
        clearOut();
    }//GEN-LAST:event_lastNameInKeyPressed

    private void startDateInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_startDateInKeyPressed
        clearOut();
    }//GEN-LAST:event_startDateInKeyPressed

    private void salaryInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salaryInKeyPressed
        clearOut();
    }//GEN-LAST:event_salaryInKeyPressed
    private class employees {
        //initialize variables
        String id, firstName, lastName, annualSalary, startDate;

        //initialize the object with values
        employees(String _id, String _firstName, String _lastName,
                String _annualSalary, String _startDate) {
            id = _id;
            firstName = _firstName;
            lastName = _lastName;
            annualSalary = _annualSalary;
            startDate = _startDate;
        }
    }

    private void clearOut() {
        //clear labels
        errorLabel.setText("");
        successLabel.setText("");

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new EmployeeRecords().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField employeeIdIn;
    private javax.swing.JLabel employeeRecordsGFX;
    private javax.swing.JTextArea employeesOut;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JTextField firstNameIn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastNameIn;
    private javax.swing.JButton list;
    private javax.swing.JButton remove;
    private javax.swing.JTextField salaryIn;
    private javax.swing.JTextField startDateIn;
    private javax.swing.JLabel successLabel;
    // End of variables declaration//GEN-END:variables
}
